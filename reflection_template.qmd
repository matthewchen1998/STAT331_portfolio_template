---
title: "STAT 331 Portfolio"
author: Matthew Chen
format: 
  html: 
    self-contained: true
layout: margin-left
editor: visual
execute: 
  eval: false
  echo: true
---

[**My Grade:**]{.underline} I believe my grade equivalent to course work evidenced below to be an \_\_.

[**Learning Objective Evidence:**]{.underline} In the code chunks below, provide code from a Lab or Challenge assignment where you believe you have demonstrated proficiency with the specified learning target. Be sure to specify **where** the code came from (e.g., Lab 4 Question 2).

## Working with Data

**WD-1: I can import data from a *variety* of formats (e.g., csv, xlsx, txt, etc.).**

-   `csv`
-   lab 4

```{r wd-1-csv}

library(tidyverse)
library(dplyr)
library(here)

 avocado<-read_csv(here("week 4", "avocado.csv"))

```

-   `xlsx`
-   practice activity 4

```{r wd-1-xlsx}


military <- read_xlsx(here::here("data", 
                                 "gov_spending_per_capita.xlsx"), 
                      sheet = "Share of Govt. spending", 
                      skip = 7, 
                      n_max = 191)

```

-   `txt`
-   practice activity 5.2

```{r wd-1-txt}

message <- read_csv(here::here("data", "scrambled_message.txt")
                      )



```

**WD-2: I can select necessary columns from a dataset.**

-   Lab 4 question 4

```{r wd-2}

avocado_clean|>
  separate(col = Date, into = c('year','month','day'),sep ='/')|>
  select(month,total_volume)|>
  slice_max(total_volume)
```

**WD-3: I can filter rows from a dataframe for a *variety* of data types (e.g., numeric, integer, character, factor, date).**

-   numeric
-   Lab 4 Question 3

```{r wd-3-numeric}


avocado_major_region|>
  filter(type =="organic",year ==2017)|>
  select(region,total_small)|>
  slice_max(total_small)

```

-   character -- specifically a string
-   Lab 4 Question 14

```{r wd-3-string}


hiphop_clean|>
  mutate(bieber = as.numeric(bieber))|>
  filter(city > 10000 & city< 60000, age> 17 & age< 23, ethnic == "white", sex == "Male", bieber >= 5)|>
  distinct(subj)

```

-   factor
-   Lab 3 Question 11

```{r wd-3-factor}


hiphop_clean|>
   group_by(word)|>
  filter(familiarity ==1,age<20)|>
  summarise(familiarity = n())|>
  slice_max(familiarity)
```

-   date
-   Practice activity 5.1 question 2

```{r wd-3-date}


suspects <- suspects %>%
  filter(!wday(Time.Spotted, label = TRUE, abbr = FALSE) %in% c("Tuesday" , "Thursday"))
```

**WD-4: I can modify existing variables and create new variables in a dataframe for a *variety* of data types (e.g., numeric, integer, character, factor, date).**

-   numeric
-   Lab 4 question 6

```{r wd-4-numeric}

 california_new|>
  group_by(region)|>
  summarize(m_Conventional=mean(conventional),m_organic = mean(organic))|>
    mutate(diff_mean = m_organic - m_Conventional)|>
    distinct(abs(diff_mean), region)

```

-   character -- specifically a string
-   lab 3 question 7

```{r wd-4-string}

hiphop_clean<-hiphop_clean|>
  mutate(race = if_else(ethnic == "white", "white","non-white"))
```

-   factor
-   lab 3 question 5

```{r wd-4-factor}


hiphop_clean <- hiphop |>
  mutate(across( c(familiarity, jayz, jayz1, barkley, boondocks,
boondocks1, monique, bieber, word, subj, ethnic,sex),as.factor))|>
  select(-one_of("numPreferredArtists","numOverallArtists"))
```

-   date
-   practice activity 5.1 question 1

```{r wd-4-date}
suspects <- suspects %>%
  mutate(Time.Spotted = ymd_hms(Time.Spotted),
         Time.Spotted = force_tz(Time.Spotted,
                                 tzone = "America/Los_Angeles")
         )

```

**WD-5: I can use mutating joins to combine multiple dataframes.**

-   `left_join()`

```{r wd-5-left}


```

-   `right_join()`

```{r wd-5-right}

```

-   `inner_join()`

```{r wd-5-inner}

```

-   `full_join()`
-   challenge 4

```{r wd-5-full}
join_dataset<-house_price_four_cities|>
  full_join(california_avocado_region, by = "region")|>
   select(region, AveragePrice, prices,Date,months,type)|>
  distinct(AveragePrice,prices,type)
```

**WD-6: I can use filtering joins to filter rows from a dataframe.**

-   `semi_join()`
-   lab 4 question 6

```{r wd-6-semi}
california_avocado_region<-avocado_clean|>
  semi_join(california_region, by = "region")
```

-   `anti_join()`
-   lab 4 question 5

```{r wd-6-anti}
avocado_metro_region<-avocado_clean|>
  anti_join(major_region, by = "region")|>
  anti_join(state_region, by = "region")|>
  filter(region!= "TotalUS")
```

**WD-7: I can pivot dataframes from long to wide and visa versa**

-   `pivot_longer()`
-   challenge 4

```{r wd-7-long}
house_price_four_cities<-median_house_price|>
  semi_join(four_cities, by = "RegionName")|>
  pivot_longer(names_to = "months", values_to = "prices", c(-RegionID, -SizeRank, -RegionName,-RegionType,-StateName))|>
  rename(region = "RegionName")
```

-   `pivot_wider()`
-   lab 4 question 6

```{r wd-7-wide}
california_new<-california_avocado_region|>
  select(-(total_volume:total_extra_large),-year,Date)|>
  pivot_wider(names_from = type, values_from = AveragePrice)
```

## Reproducibility

**R-1: I can create professional looking, reproducible analyses using RStudio projects, Quarto documents, and the here package.**

I've done this in the following provided assignments:

**R-2: I can write well documented and tidy code.**

-   Example 1

```{r r-2-1}

```

-   Example 2

```{r r-2-2}

```

**R-3: I can write robust programs that are resistant to changes in inputs.**

-   Example 1

```{r r-3-1}

```

-   Example 2

```{r r-3-2}

```

## Data Visualization & Summarization

**DVS-1: I can create visualizations for a *variety* of variable types (e.g., numeric, character, factor, date)**

-   numeric variables

```{r dvs-1-num}

```

-   numeric variables and categorical variables

```{r dvs-2-num-cat}

```

-   categorical variables

```{r dvs-2-cat}

```

-   dates

```{r dvs-2-date}

```

**DVS-2: I use plot modifications to make my visualization clear to the reader.**

-   Example 1

```{r dvs-2-1}

```

-   Example 2

```{r dvs-2-2}

```

**DVS-3: I show creativity in my visualizations**

-   Example 1

```{r dvs-3-1}

```

-   Example 2

```{r dvs-3-2}

```

**DVS-4: I can calculate numerical summaries of variables.**

-   Example 1

```{r dvs-4-1}

```

-   Example 2

```{r dvs-4-2}

```

**DVS-5: I can find summaries of variables across multiple groups.**

-   Example 1

```{r dvs-5-1}

```

-   Example 2

```{r dvs-5-2}

```

**DVS-6: I can create tables which make my summaries clear to the reader.**

-   Example 1

```{r dvs-6-1}

```

-   Example 2

```{r dvs-6-2}

```

**DVS-7: I show creativity in my tables.**

-   Example 1

```{r dvs-7-1}

```

-   Example 2

```{r dvs-7-2}

```

## Program Efficiency

**PE-1: I can write concise code which does not repeat itself.**

-   using a single function call

```{r pe-1-one-call}

```

-   `across()`

```{r pe-1-across}

```

-   `map()` functions

```{r pe-1-map-1}

```

**PE-2: I can write functions to reduce repetition in my code.**

-   Example 1

```{r pe2-1}

```

-   Example 2

```{r pe2-2}

```

**PE-3:I can use iteration to reduce repetition in my code.**

-   `across()`

```{r pe-3-across}

```

-   `map()` functions (Provide 2 Examples)

```{r pe-3-map-1}

```

```{r pe-3-map-2}

```

**PE-4: I can use modern tools when carrying out my analysis.**

-   Example 1

```{r pe-4-1}

```

-   Example 2

```{r pe-4-2}

```

## Data Simulation & Modeling

**DSM-1: I can simulate data from a *variety* of probability models.**

-   Example 1

```{r dsm-1-1}

```

-   Example 2

```{r dsm-1-2}

```

**DSM-2: I can fit a linear regression and extract necessary summary measures.**

-   Example 1

```{r dsm-2-1}

```

-   Example 2

```{r dsm-2-2}

```

## Revising My Thinking

<!-- How did you revise your thinking throughout the course? How did you revise your thinking on the code examples you have provided in your portfolio? -->

## Extending My Thinking

<!-- How did you extended your thinking throughout the course? How did you extend your thinking on the code examples you have provided in your portfolio? -->

## Peer Support & Collaboration

<!-- Include an image of feedback you gave that you are proud of (either in a peer review or in Discord) -->
